pipeline {
   agent any

   stages {
      stage('Checkout') {
         steps {
           checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [[$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [[path: 'assets/IS/packages/LinuxDemo'], [path: 'assets/IS/packages/DemoDevOps'], [path: 'build.xml'],[path: 'project.properties']]]], submoduleCfg: [], userRemoteConfigs: [[url: 'https://github.com/srikanthd05/DevOps']]])
         }
      }
      stage('CodeReview') {
         steps {
            bat '%ISCCR_HOME%/CodeReview -Dcode.review.directory=%WORKSPACE%/assets/IS/packages -Dcode.review.pkgprefix=Demo -Dcode.review.runmode=multi -Dcode.review.folder-prefix=Demo'
         }
         post {
           always {
            emailext attachLog: true, attachmentsPattern: 'MULTI__CodeReviewReport__html-multi.html',body: "${currentBuild.currentResult}",recipientProviders: [[$class: 'DevelopersRecipientProvider'], [$class: 'RequesterRecipientProvider']], subject: 'ISCCR Report'
            }
         }
      }
      stage('Build'){
            steps {
                bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} build"
            }
        }
        stage('Deploy') {
            steps {
		bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} deploy"
            }
        }
 	stage('Test') {
            steps {
		bat "${env.SAG_HOME}/common/lib/ant/bin/ant -DSAGHome=${env.SAG_HOME} -DSAG_CI_HOME=${env.SAG_CI_HOME} -DprojectName=${env.JOB_NAME} test"
		junit 'report/'
            }
        }
   }
}
